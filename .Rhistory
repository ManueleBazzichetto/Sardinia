alldates = c()
i = 1
for (m in 11:12){
alldates[i] <- paste(paste(2000,m,15,sep="-"),"12:00:00",sep=" ")
i = i+1
}
seq(as.Date("2000-11-15", format="%Y-%m-%d"), as.Date("2009-09-15", format="%Y-%m-%d"))
seq(as.Date("2000-11-15", format="%Y-%m-%d"), as.Date("2009-09-15", format="%Y-%m-%d"), by="month")
library(adehabitatHR)
?kernelkcbase
range(rnorm(100))
diff(range(rnorm(100)))
library(sf)
library(spatstat)
library(spatstat.random)
library(ggplot2)
library(ggpubr)
library(mapview)
#import all packages in a single call
invisible(lapply(c("sf", "spatstat", "spatstat.random", "ggplot2", "ggpubr", "mapview"), require, character.only = T))
#import data: map of vegetation series & human structures (change directory to wherever data are stored)
Sard_poly <- st_read("Data/Ser_veg_diss/Serie_veg_diss.shp")
Veg_map <- st_read("Data/serie_di_vegetazione/Serie_vegetazione_MM_Descr.shp")
Hum_str <- st_read("Data/strutture megalitiche_points/Megalithic structures Sardinia.shp")
#transform CRS to UTM 32N
Sard_poly.utm <- st_transform(Sard_poly, crs = 32632)
Veg_map.utm <- st_transform(Veg_map, crs = 32632)
Hum_str.utm <- st_transform(Hum_str, crs = 32632)
#get rid of original data
rm(Sard_poly, Veg_map, Hum_str)
#have a look at the data
mapview(Veg_map.utm) + mapview(Hum_str.utm)
#check str
str(Hum_str.utm)
#subset Hum_str.utm to keep interesting columns
Hum_str.utm <- Hum_str.utm[c("content_id", "tipology")]
#subset Hum_str.utm to only keep nuraghe and villages
Nuraghe_villagi.utm <- Hum_str.utm[Hum_str.utm$tipology %in% c("nuraghe", "villaggi"), ]
#read the simplified boundary polygon to be used as window for ppp object (see below)
Sardinia_polys.utm.simplified <- st_read("Data/Sardinia_simplified.shp") %>% st_transform(32632)
Sard_windows <- as.owin(Sardinia_polys.utm.simplified)
#rectangular window (rw)
Nuraghe.ppp.rw <- as.ppp(Nuraghe_villagi.utm[!(Nuraghe_villagi.utm$content_id %in% c("NUR19459", "NUR11084", "NUR4780")), ])
sum(duplicated.ppp(Nuraghe.ppp.rw))
set.seed(20)
#use edge = "torus" but rectangular window -> this creates list ~ 20 GB (delete it afterwards)
#lower number for nsim should work anyway
Torus_list_ppp <- spatstat.random::rshift.ppp(Nuraghe.ppp.rw, nsim = 5000, edge = "torus")
Min_N <- floor((nrow(Nuraghe_villagi.utm)-3)*.7)
load("Torus_list_sf.RData")
#check empty elements in Torus
sum(sapply(Torus_list_sf, function(i) class(i)[1]) %in% c("sf")) #5000
Null_dist_chi.pr <- lapply(Torus_list_sf, function(pnt_obj) {
#join
pnt_veg <- st_join(pnt_obj, Veg_map.utm[c("LEG_ITALIA")], join = st_intersects) #LEG_ITALIA is column with ID of vegetation series/categories
smp_sz <- sum(!is.na(pnt_veg$LEG_ITALIA))
if(smp_sz < Min_N) return(NA)
#count pnts in series
pnt_veg.cnt <- as.data.frame(table(pnt_veg[[c("LEG_ITALIA")]]))
pnt_veg.cnt <- setNames(pnt_veg.cnt$Freq, pnt_veg.cnt$Var1)
return(list(Exp = pnt_veg.cnt, N = smp_sz))
})
